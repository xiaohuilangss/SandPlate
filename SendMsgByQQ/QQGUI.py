# encoding=utf-8import win32clipboard as wimport win32guiimport timeimport win32conimport win32clipboardfrom ctypes import *from pylab import *from PIL import Imagefrom io import BytesIOfrom SDK.MyTimeOPT import get_current_datetime_strdef getText():	"""获取剪贴板文本"""	w.OpenClipboard()	d = w.GetClipboardData(win32con.CF_UNICODETEXT)	w.CloseClipboard()	return ddef set_text(string):	"""设置剪贴板文本"""	w.OpenClipboard()	w.EmptyClipboard()	w.SetClipboardData(win32con.CF_UNICODETEXT, string)	w.CloseClipboard()def set_pic(image_data):	win32clipboard.OpenClipboard()	win32clipboard.EmptyClipboard()	win32clipboard.SetClipboardData(win32con.CF_BITMAP, image_data)	# win32clipboard.SetClipboardData(win32con.CF_DIB, aString)	win32clipboard.CloseClipboard()def send_qq_pic_string(towho, image_data):	"""发送qq消息	to_who：qq消息接收人	msg：需要发送的消息	"""	# 将消息写到剪贴板	set_pic(image_data)	# 句柄list	hand_list = []	try:		i = 0		qq = win32gui.FindWindow(None, towho)		if qq != 0:			win32gui.SetWindowText(qq, towho + str(i))			hand_list.append(qq)			# 投递剪贴板消息到QQ窗体			win32gui.SendMessage(qq, 258, 22, 2080193)			win32gui.SendMessage(qq, 770, 0, 0)			# 模拟按下回车键			win32gui.SendMessage(qq, win32con.WM_KEYDOWN, win32con.VK_RETURN, 0)			win32gui.SendMessage(qq, win32con.WM_KEYUP, win32con.VK_RETURN, 0)		else:			print('没有名字为  ' + towho + ' 的窗口！')			return		# 查找是否有同名窗口		while qq != 0:			i = i + 1			qq = win32gui.FindWindow(None, towho)			if qq != 0:				win32gui.SetWindowText(qq, towho + str(i))				hand_list.append(qq)			# 投递剪贴板消息到QQ窗体			win32gui.SendMessage(qq, 258, 22, 2080193)			win32gui.SendMessage(qq, 770, 0, 0)			# 模拟按下回车键			win32gui.SendMessage(qq, win32con.WM_KEYDOWN, win32con.VK_RETURN, 0)			win32gui.SendMessage(qq, win32con.WM_KEYUP, win32con.VK_RETURN, 0)	except Exception as e:		print('函数 send_qq：出错！\n原因：\n' + str(e))	finally:		# 恢复原先的名字		if len(hand_list):			r = [win32gui.SetWindowText(x, towho) for x in hand_list]def send_qq(towho, msge):	"""发送qq消息	to_who：qq消息接收人	msg：需要发送的消息	"""	# 将消息写到剪贴板	set_text(msge)	# 句柄list	hand_list = []	try:		i = 0		qq = win32gui.FindWindow(None, towho)		if qq != 0:			win32gui.SetWindowText(qq, towho + str(i))			hand_list.append(qq)			# 投递剪贴板消息到QQ窗体			win32gui.SendMessage(qq, 258, 22, 2080193)			win32gui.SendMessage(qq, 770, 0, 0)			# 模拟按下回车键			win32gui.SendMessage(qq, win32con.WM_KEYDOWN, win32con.VK_RETURN, 0)			win32gui.SendMessage(qq, win32con.WM_KEYUP, win32con.VK_RETURN, 0)		else:			print('没有名字为  ' + towho + ' 的窗口！')			return		# 查找是否有同名窗口		while qq != 0:			i = i + 1			qq = win32gui.FindWindow(None, towho)			if qq != 0:				win32gui.SetWindowText(qq, towho + str(i))				hand_list.append(qq)			# 投递剪贴板消息到QQ窗体			win32gui.SendMessage(qq, 258, 22, 2080193)			win32gui.SendMessage(qq, 770, 0, 0)			# 模拟按下回车键			win32gui.SendMessage(qq, win32con.WM_KEYDOWN, win32con.VK_RETURN, 0)			win32gui.SendMessage(qq, win32con.WM_KEYUP, win32con.VK_RETURN, 0)	except Exception as e:		print('函数 send_qq：出错！\n原因：\n' + str(e))	finally:		# 恢复原先的名字		if len(hand_list):			r = [win32gui.SetWindowText(x, towho) for x in hand_list]def convert_pic_to_data(pic_url):	img = Image.open(pic_url)	output = BytesIO()  						# 如是StringIO分引起TypeError: string argument expected, got 'bytes'	img.convert("RGB").save(output, "BMP")  	# 以BMP格式保存流	data = output.getvalue()[14:]  				# bmp文件头14个字节丢弃	output.close()	return datadef send_msg_to_qun(qun_list, msg_list, sleep_time, source_dir='./', start_time='00:00:00', end_time='23:59:59'):	"""	:param qun_list:	:param msg_list:	:param start_time:	:param end_time:	:return:	"""	while (get_current_datetime_str()[-8:] >= start_time) & (get_current_datetime_str()[-8:] <= end_time):		for qun in qun_list:			try:				# 分解信息，并发送				for msg in msg_list:					if ('.png' in msg) | ('.jpg' in msg):						msg_ = msg.replace('\n', '').replace('\t', '')						send_qq_pic(qun, source_dir + msg_)					else:						send_qq(qun, msg)					time.sleep(0.5)				print(qun + '： 消息发送成功！\n------------------------\n\n')			except Exception as e:				print(qun + '： 消息发送失败！\n原因:\n' + str(e) + '\n------------------------\n\n')		print('\n\n================== 大循环完成 ==================\n\n完成时间：' + get_current_datetime_str() + '\n')		time.sleep(sleep_time)def send_qq_pic(towho, pic_url):	im = Image.open(pic_url)	bmp_url = pic_url.replace('.jpg', '.bmp').replace('.png', '.bmp')	im.save(bmp_url)	aString = windll.user32.LoadImageW(0, bmp_url, win32con.IMAGE_BITMAP, 0, 0, win32con.LR_LOADFROMFILE)	send_qq_pic_string(towho, aString)if __name__ == '__main__':	send_qq_pic('影子', './13.jpg')	im = Image.open('./13.jpg')	im.save('./11.bmp')	aString = windll.user32.LoadImageW(0, r"./11.bmp", win32con.IMAGE_BITMAP, 0, 0, win32con.LR_LOADFROMFILE)	send_qq_pic_string('影子', aString)	pass